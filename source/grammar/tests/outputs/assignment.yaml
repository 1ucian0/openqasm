# indent w/ 2 spaces
source: |
  bit a[2], b[2];
  qubit q[3];
  int[10] x = 12;
  a[0] = b[1];
  x += int[10](a[1]);
  a = measure q[1:2];
  b = a == 0;
  a = b in { c, d } == e == f;
  a = b in [0:2:20] == c == d;
reference: |
  program
    header
    statement
      classicalDeclarationStatement
        classicalDeclaration
          bitDeclaration
            bitType
              bit
            indexIdentifierList
              indexIdentifier
                a
                [
                expressionList
                  expression
                    expressionTerminator
                      2
                ]
              ,
              indexIdentifier
                b
                [
                expressionList
                  expression
                    expressionTerminator
                      2
                ]
        ;
    globalStatement
      quantumDeclarationStatement
        quantumDeclaration
          quantumType
            qubit
          indexIdentifierList
            indexIdentifier
              q
              [
              expressionList
                expression
                  expressionTerminator
                    3
              ]
        ;
    statement
      classicalDeclarationStatement
        classicalDeclaration
          singleDesignatorDeclaration
            singleDesignatorType
              int
            designator
              [
              expression
                expressionTerminator
                  10
              ]
            equalsAssignmentList
              x
              equalsExpression
                =
                expression
                  expressionTerminator
                    12
        ;
    statement
      assignmentStatement
        classicalAssignment
          indexIdentifier
            a
            [
            expressionList
              expression
                expressionTerminator
                  0
            ]
          assignmentOperator
            =
          expression
            expressionTerminator
              expressionTerminator
                b
              [
              expression
                expressionTerminator
                  1
              ]
        ;
    statement
      assignmentStatement
        classicalAssignment
          indexIdentifier
            x
          assignmentOperator
            +=
          expression
            expressionTerminator
              builtInCall
                castOperator
                  classicalType
                    singleDesignatorType
                      int
                    designator
                      [
                      expression
                        expressionTerminator
                          10
                      ]
                (
                expressionList
                  expression
                    expressionTerminator
                      expressionTerminator
                        a
                      [
                      expression
                        expressionTerminator
                          1
                      ]
                )
        ;
    statement
      assignmentStatement
        quantumMeasurementAssignment
          indexIdentifierList
            indexIdentifier
              a
          =
          quantumMeasurement
            measure
            indexIdentifierList
              indexIdentifier
                q
                rangeDefinition
                  [
                  expression
                    expressionTerminator
                      1
                  :
                  expression
                    expressionTerminator
                      2
                  ]
        ;
    statement
      assignmentStatement
        classicalAssignment
          indexIdentifier
            b
          assignmentOperator
            =
          expression
            logicalAndExpression
              comparisonExpression
                comparisonExpression
                  orExpression
                    xOrExpression
                      bitAndExpression
                        bitShiftExpression
                          additiveExpression
                            multiplicativeExpression
                              expressionTerminator
                                a
                relationalOperator
                  ==
                orExpression
                  xOrExpression
                    bitAndExpression
                      bitShiftExpression
                        additiveExpression
                          multiplicativeExpression
                            expressionTerminator
                              0
        ;
    statement
      assignmentStatement
        classicalAssignment
          indexIdentifier
            a
          assignmentOperator
            =
          expression
            logicalAndExpression
              comparisonExpression
                comparisonExpression
                  comparisonExpression
                    comparisonExpression
                      orExpression
                        xOrExpression
                          bitAndExpression
                            bitShiftExpression
                              additiveExpression
                                multiplicativeExpression
                                  expressionTerminator
                                    b
                    relationalOperator
                      in
                    orExpression
                      xOrExpression
                        bitAndExpression
                          bitShiftExpression
                            additiveExpression
                              multiplicativeExpression
                                expressionTerminator
                                  setDeclaration
                                    {
                                    expressionList
                                      expression
                                        expressionTerminator
                                          c
                                      ,
                                      expression
                                        expressionTerminator
                                          d
                                    }
                  relationalOperator
                    ==
                  orExpression
                    xOrExpression
                      bitAndExpression
                        bitShiftExpression
                          additiveExpression
                            multiplicativeExpression
                              expressionTerminator
                                e
                relationalOperator
                  ==
                orExpression
                  xOrExpression
                    bitAndExpression
                      bitShiftExpression
                        additiveExpression
                          multiplicativeExpression
                            expressionTerminator
                              f
        ;
    statement
      assignmentStatement
        classicalAssignment
          indexIdentifier
            a
          assignmentOperator
            =
          expression
            logicalAndExpression
              comparisonExpression
                comparisonExpression
                  comparisonExpression
                    comparisonExpression
                      orExpression
                        xOrExpression
                          bitAndExpression
                            bitShiftExpression
                              additiveExpression
                                multiplicativeExpression
                                  expressionTerminator
                                    b
                    relationalOperator
                      in
                    orExpression
                      xOrExpression
                        bitAndExpression
                          bitShiftExpression
                            additiveExpression
                              multiplicativeExpression
                                expressionTerminator
                                  setDeclaration
                                    rangeDefinition
                                      [
                                      expression
                                        expressionTerminator
                                          0
                                      :
                                      expression
                                        expressionTerminator
                                          2
                                      :
                                      expression
                                        expressionTerminator
                                          20
                                      ]
                  relationalOperator
                    ==
                  orExpression
                    xOrExpression
                      bitAndExpression
                        bitShiftExpression
                          additiveExpression
                            multiplicativeExpression
                              expressionTerminator
                                c
                relationalOperator
                  ==
                orExpression
                  xOrExpression
                    bitAndExpression
                      bitShiftExpression
                        additiveExpression
                          multiplicativeExpression
                            expressionTerminator
                              d
        ;
